// Code generated by "stringer -type=CsCodeDirectoryFlag,CDVersion,ExecSegFlag -output codesign_string.go"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CS_VALID-1]
	_ = x[CS_ADHOC-2]
	_ = x[CS_GET_TASK_ALLOW-4]
	_ = x[CS_INSTALLER-8]
	_ = x[CS_FORCED_LV-16]
	_ = x[CS_INVALID_ALLOWED-32]
	_ = x[CS_HARD-256]
	_ = x[CS_KILL-512]
	_ = x[CS_CHECK_EXPIRATION-1024]
	_ = x[CS_RESTRICT-2048]
	_ = x[CS_ENFORCEMENT-4096]
	_ = x[CS_REQUIRE_LV-8192]
	_ = x[CS_ENTITLEMENTS_VALIDATED-16384]
	_ = x[CS_NVRAM_UNRESTRICTED-32768]
	_ = x[CS_RUNTIME-65536]
	_ = x[CS_ALLOWED_MACHO-81666]
	_ = x[CS_EXEC_SET_HARD-1048576]
	_ = x[CS_EXEC_SET_KILL-2097152]
	_ = x[CS_EXEC_SET_ENFORCEMENT-4194304]
	_ = x[CS_EXEC_INHERIT_SIP-8388608]
	_ = x[CS_KILLED-16777216]
	_ = x[CS_DYLD_PLATFORM-33554432]
	_ = x[CS_PLATFORM_BINARY-67108864]
	_ = x[CS_PLATFORM_PATH-134217728]
	_ = x[CS_DEBUGGED-268435456]
	_ = x[CS_SIGNED-536870912]
	_ = x[CS_DEV_CODE-1073741824]
	_ = x[CS_DATAVAULT_CONTROLLER-2147483648]
	_ = x[CS_ENTITLEMENT_FLAGS-2147516428]
}

const _CsCodeDirectoryFlag_name = "CS_VALIDCS_ADHOCCS_GET_TASK_ALLOWCS_INSTALLERCS_FORCED_LVCS_INVALID_ALLOWEDCS_HARDCS_KILLCS_CHECK_EXPIRATIONCS_RESTRICTCS_ENFORCEMENTCS_REQUIRE_LVCS_ENTITLEMENTS_VALIDATEDCS_NVRAM_UNRESTRICTEDCS_RUNTIMECS_ALLOWED_MACHOCS_EXEC_SET_HARDCS_EXEC_SET_KILLCS_EXEC_SET_ENFORCEMENTCS_EXEC_INHERIT_SIPCS_KILLEDCS_DYLD_PLATFORMCS_PLATFORM_BINARYCS_PLATFORM_PATHCS_DEBUGGEDCS_SIGNEDCS_DEV_CODECS_DATAVAULT_CONTROLLERCS_ENTITLEMENT_FLAGS"

var _CsCodeDirectoryFlag_map = map[CsCodeDirectoryFlag]string{
	1:          _CsCodeDirectoryFlag_name[0:8],
	2:          _CsCodeDirectoryFlag_name[8:16],
	4:          _CsCodeDirectoryFlag_name[16:33],
	8:          _CsCodeDirectoryFlag_name[33:45],
	16:         _CsCodeDirectoryFlag_name[45:57],
	32:         _CsCodeDirectoryFlag_name[57:75],
	256:        _CsCodeDirectoryFlag_name[75:82],
	512:        _CsCodeDirectoryFlag_name[82:89],
	1024:       _CsCodeDirectoryFlag_name[89:108],
	2048:       _CsCodeDirectoryFlag_name[108:119],
	4096:       _CsCodeDirectoryFlag_name[119:133],
	8192:       _CsCodeDirectoryFlag_name[133:146],
	16384:      _CsCodeDirectoryFlag_name[146:171],
	32768:      _CsCodeDirectoryFlag_name[171:192],
	65536:      _CsCodeDirectoryFlag_name[192:202],
	81666:      _CsCodeDirectoryFlag_name[202:218],
	1048576:    _CsCodeDirectoryFlag_name[218:234],
	2097152:    _CsCodeDirectoryFlag_name[234:250],
	4194304:    _CsCodeDirectoryFlag_name[250:273],
	8388608:    _CsCodeDirectoryFlag_name[273:292],
	16777216:   _CsCodeDirectoryFlag_name[292:301],
	33554432:   _CsCodeDirectoryFlag_name[301:317],
	67108864:   _CsCodeDirectoryFlag_name[317:335],
	134217728:  _CsCodeDirectoryFlag_name[335:351],
	268435456:  _CsCodeDirectoryFlag_name[351:362],
	536870912:  _CsCodeDirectoryFlag_name[362:371],
	1073741824: _CsCodeDirectoryFlag_name[371:382],
	2147483648: _CsCodeDirectoryFlag_name[382:405],
	2147516428: _CsCodeDirectoryFlag_name[405:425],
}

func (i CsCodeDirectoryFlag) String() string {
	if str, ok := _CsCodeDirectoryFlag_map[i]; ok {
		return str
	}
	return "CsCodeDirectoryFlag(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CS_SUPPORTS_SCATTER-131328]
	_ = x[CS_SUPPORTS_TEAMID-131584]
	_ = x[CS_SUPPORTS_CODELIMIT64-131840]
	_ = x[CS_SUPPORTS_EXECSEG-132096]
	_ = x[CS_SUPPORTS_RUNTIME-132352]
	_ = x[CS_SUPPORTS_LINKAGE-132608]
}

const (
	_CDVersion_name_0 = "CS_SUPPORTS_SCATTER"
	_CDVersion_name_1 = "CS_SUPPORTS_TEAMID"
	_CDVersion_name_2 = "CS_SUPPORTS_CODELIMIT64"
	_CDVersion_name_3 = "CS_SUPPORTS_EXECSEG"
	_CDVersion_name_4 = "CS_SUPPORTS_RUNTIME"
	_CDVersion_name_5 = "CS_SUPPORTS_LINKAGE"
)

func (i CDVersion) String() string {
	switch {
	case i == 131328:
		return _CDVersion_name_0
	case i == 131584:
		return _CDVersion_name_1
	case i == 131840:
		return _CDVersion_name_2
	case i == 132096:
		return _CDVersion_name_3
	case i == 132352:
		return _CDVersion_name_4
	case i == 132608:
		return _CDVersion_name_5
	default:
		return "CDVersion(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CS_EXECSEG_MAIN_BINARY-1]
	_ = x[CS_EXECSEG_ALLOW_UNSIGNED-16]
	_ = x[CS_EXECSEG_DEBUGGER-32]
	_ = x[CS_EXECSEG_JIT-64]
	_ = x[CS_EXECSEG_SKIP_LV-128]
	_ = x[CS_EXECSEG_CAN_LOAD_CDHASH-256]
	_ = x[CS_EXECSEG_CAN_EXEC_CDHASH-512]
}

const (
	_ExecSegFlag_name_0 = "CS_EXECSEG_MAIN_BINARY"
	_ExecSegFlag_name_1 = "CS_EXECSEG_ALLOW_UNSIGNED"
	_ExecSegFlag_name_2 = "CS_EXECSEG_DEBUGGER"
	_ExecSegFlag_name_3 = "CS_EXECSEG_JIT"
	_ExecSegFlag_name_4 = "CS_EXECSEG_SKIP_LV"
	_ExecSegFlag_name_5 = "CS_EXECSEG_CAN_LOAD_CDHASH"
	_ExecSegFlag_name_6 = "CS_EXECSEG_CAN_EXEC_CDHASH"
)

func (i ExecSegFlag) String() string {
	switch {
	case i == 1:
		return _ExecSegFlag_name_0
	case i == 16:
		return _ExecSegFlag_name_1
	case i == 32:
		return _ExecSegFlag_name_2
	case i == 64:
		return _ExecSegFlag_name_3
	case i == 128:
		return _ExecSegFlag_name_4
	case i == 256:
		return _ExecSegFlag_name_5
	case i == 512:
		return _ExecSegFlag_name_6
	default:
		return "ExecSegFlag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
