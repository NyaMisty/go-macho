// Code generated by "stringer -type=Kind,RecordFlags -output fields_string.go"; DO NOT EDIT.

package fields

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Struct-0]
	_ = x[Class-1]
	_ = x[Enum-2]
	_ = x[MultiPayloadEnum-3]
	_ = x[Protocol-4]
	_ = x[ClassProtocol-5]
	_ = x[ObjCProtocol-6]
	_ = x[ObjCClass-7]
}

const _Kind_name = "StructClassEnumMultiPayloadEnumProtocolClassProtocolObjCProtocolObjCClass"

var _Kind_index = [...]uint8{0, 6, 11, 15, 31, 39, 52, 64, 73}

func (i Kind) String() string {
	if i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IsIndirectCase-1]
	_ = x[IsVar-2]
}

const _RecordFlags_name = "IsIndirectCaseIsVar"

var _RecordFlags_index = [...]uint8{0, 14, 19}

func (i RecordFlags) String() string {
	i -= 1
	if i >= RecordFlags(len(_RecordFlags_index)-1) {
		return "RecordFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _RecordFlags_name[_RecordFlags_index[i]:_RecordFlags_index[i+1]]
}
